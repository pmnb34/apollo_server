// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role         Role    @default(USER)
  name         String
  email        String  @unique
  username     String  @unique
  password     String
  avatar       String?
  introduction String?

  loginHistory LoginHistory[]
  feed         Feed[]
  comment      Comment[]
  like         Like[]
  view         View[]
  point        Point[]

  followers  User[] @relation("follow")
  followings User[] @relation("follow")

  blocked  User[] @relation("block")
  blocking User[] @relation("block")

  report Report[]
}

enum Role {
  USER
  ADMIN
}

model LoginHistory {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  user   User @relation(fields: [userId], references: [id])
  userId Int

  ipAddress String
  userAgent String
}

model Feed {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id])
  userId Int

  body String
  tags Tag[]

  isPublic Boolean @default(true)

  comment Comment[]
  like    Like[]
  view    View[]
  point   Point[]

  report Report[]
}

model View {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  feed   Feed @relation(fields: [feedId], references: [id])
  user   User @relation(fields: [userId], references: [id])
  feedId Int  @unique
  userId Int  @unique
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  feed   Feed @relation(fields: [feedId], references: [id])
  user   User @relation(fields: [userId], references: [id])
  feedId Int  @unique
  userId Int  @unique
}

model Tag {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique

  feed Feed[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  body     String
  isPublic Boolean @default(true)

  user   User @relation(fields: [userId], references: [id])
  feed   Feed @relation(fields: [feedId], references: [id])
  userId Int
  feedId Int
}

model Point {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  body Int @default(0)

  user   User @relation(fields: [userId], references: [id])
  feed   Feed @relation(fields: [feedId], references: [id])
  userId Int
  feedId Int
}

model Report {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  body     String
  isPublic Boolean @default(true)

  user   User @relation(fields: [userId], references: [id])
  feed   Feed @relation(fields: [feedId], references: [id])
  userId Int
  feedId Int
}

