// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  username     String         @unique
  password     String
  avatar       String?
  introduction String?
  point        Int            @default(100)
  feed         Feed[]
  Comment      Comment[]
  Like         Like[]
  followers    User[]       @relation("follow")
  followings   User[]       @relation("follow")
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  loginHistory loginHistory[]
  report       report[]
}

model loginHistory {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  ipAddress String
  userAgent String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Feed {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  body      String
  viewCount Int       @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Comment   Comment[]
  Hashtag   Hashtag[]
  Like      Like[]
  report    report[]
}

model Like {
  id        Int      @id @default(autoincrement())
  feed      Feed     @relation(fields: [feedId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  feedId    Int      @unique
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Hashtag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  feed      Feed[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  body      String
  user      User     @relation(fields: [userId], references: [id])
  feed      Feed     @relation(fields: [feedId], references: [id])
  userId    Int
  feedId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model Follow {
//   follower    User    @relation("follower", fields: [followerId], references: [id])
//   following   User    @relation("following", fields: [followingId], references: [id])
//   followerId  Int
//   followingId Int
//   createdAt   DateTime @default(now())

//   @@id([followerId, followingId])
// }

model report {
  id        Int      @id @default(autoincrement())
  body      String
  user      User     @relation(fields: [userId], references: [id])
  feed      Feed     @relation(fields: [feedId], references: [id])
  userId    Int
  feedId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
